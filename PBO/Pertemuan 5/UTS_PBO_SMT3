# Kelas parent / Super class
class User:
    def __init__(self, username, email, userId):
        self.username = username
        self.email = email
        self.userId = userId

    def login(self):
        print(f"{self.username} ({self.email}) berhasil login")

    def logout(self):
        print(f"{self.username} berhasil logout")

# Kelas turunan pertama
class BasicUser(User):
    def viewProduct(self, productId):
        print(f"Tampilkan Produk ID: {productId}")

    def addToCart(self, productId, quantity):
        print(f"Produk dengan ID {productId} sebanyak {quantity} berhasil ditambahkan ke keranjang")

# Kelas turunan kedua
class PremiumUser(BasicUser):
    def applyVoucher(self, voucherCode, cartTotal):
        discount = 0.10
        if cartTotal > 0:
            finalTotal = cartTotal * (1 - discount)
            print(f"Voucher '{voucherCode}' berhasil diterapkan! Total belanja setelah diskon: {finalTotal}")
        else:
            print("Total belanja harus lebih dari 0 untuk menerapkan voucher")

    def requestPrioritySupport(self, issueDescription):
        print(f"Menghubungi dukungan prioritas untuk masalah: {issueDescription}")

# Kelas turunan ketiga
class Seller(User):
    def __init__(self, username, email, userId):
        super().__init__(username, email, userId)
        self.products = []

    def addProduct(self, productName, description, price, stock):
        product = {
            "productName": productName,
            "description": description,
            "price": price,
            "stock": stock
        }
        self.products.append(product)
        print(f"Produk '{productName}' berhasil ditambahkan oleh {self.username}.")

    def processOrder(self, orderId, status):
        print(f"Pesanan dengan ID '{orderId}' diproses dengan status '{status}' oleh {self.username}.")

# Kelas turunan keempat
class Admin(User):
    def __init__(self, username, email, userId):
        super().__init__(username, email, userId)
    
    def removeUser(self, userId):
        print(f"Pengguna dengan ID '{userId}' berhasil dihapus oleh Admin {self.username}.")

    def generateReport(self, reportType, startDate, endDate):
        print(f"Laporan '{reportType}' dari {startDate} hingga {endDate} sedang dihasilkan oleh Admin {self.username}.")

# Implementasi Pembuatan Objek dan Penggunaan Metode
premiumUser = PremiumUser("Buddy-Anduk", "buddy22@gmail.com", "101")
premiumUser.login()
premiumUser.viewProduct("PRD002")
premiumUser.addToCart("PRD002", 3)
premiumUser.applyVoucher("DISC10", 50000)
premiumUser.requestPrioritySupport("Transaksi Gagal")
premiumUser.logout()

seller1 = Seller("sellerPro", "seller@gmail.com", "202")
seller1.login()
seller1.addProduct("Laptop", "Notebook Acer Nitro", 15000000, 10)
seller1.processOrder("TRX001", "sedang dalam pengiriman")
seller1.logout()

# Perintah yang lainnya
# user1 = User("ardibukan", "ardibukan@live.com", "ardi123")
# user1.login()
# user1.logout()

# basicUser = BasicUser("aboy", "aboy@gmail.com", "boyyah87")
# basicUser.login()
# basicUser.viewProduct("PRD001")
# basicUser.addToCart("PRD001", 2)
# basicUser.logout()

# premiumUser = PremiumUser("masboy", "masboy@gmail.com", "masboy89")
# premiumUser.login()
# premiumUser.viewProduct("PRD002")
# premiumUser.addToCart("PRD002", 3)
# premiumUser.applyVoucher("DISC10", 50000)
# premiumUser.requestPrioritySupport("Transaksi Gagal")
# premiumUser.logout()

# seller1 = Seller("Ardi Syah", "ardibukan@gmail.com", "NB001")
# seller1.login()
# seller1.addProduct("Laptop", "Notebook Acer Nitro", 15000000, 10)
# seller1.processOrder("TRX001", "sedang dalam pengiriman")
# seller1.logout()

# admin1 = Admin("Administrator", "admin@gmail.com", "ADM001")
# admin1.login()
# admin1.removeUser("NB001")
# admin1.generateReport("transaksi", "2024-01-01", "2024-12-31")
# admin1.logout()